<h2>最小値を求めてみよう</h2>

最小値を求める方法をPerlプログラムを用いて説明します。

<h3>配列の最小値を求めてみよう。</h3>

以下のような1~10までの正の数のみが含まれる配列を考えてみます。

<pre>
my @array = (8, 1, 3, 5, 7);
</pre>

<h4>配列の最小値を求めるサンプルプログラム</h4>
実際に配列から最小値を求めます。<a href="https://perlzemi.com/blog/20080114120030.html">List::Utilモジュール</a>にmin関数がありますが、この例では利用しません。
最小値を保存するための変数を用意し、配列の要素と1つずつ比較することで最小値を求められます。
※最小値を保存する変数の初期値は、あらかじめ1~10の数値と比較する条件にしているため、十分に大きい99を初期値に設定しています。
比較する数値の範囲がわからない場合は、工夫をして比較する必要があります。

<pre>
use strict;
use warnings;

my @array = (8, 1, 3, 5, 7); 

my $min = 99;

for my $num (@array) {
  if ($min > $num) {
    $min = $num;
  }
}

print "$min\n";
</pre>

実行結果
<pre>
1
</pre>

1つ1つ比較していて処理がとてもわかりやすいかと思います。
※コードを単純化するために1~10までの正の数のみが含まれる配列を扱います。


<h3>表形式のデータから、特定の列の最小値を求めてみよう。</h3>

最大値を求める際にも使った以下のデータを考えてみましょう。
<table> 
  <thead>
    <tr><th>name</th><th>age</th></tr>
  </thead>
  <tbody>
    <tr><th>bob</th><th>9</th></tr>
    <tr><th>tom</th><th>14</th></tr>
    <tr><th>alice</th><th>11</th></tr>
  </tbody>
</table>

配列,ハッシュのリファレンスで表すと以下のようになります。
<pre>
$array_ref = [
  {name => 'bob',  age => 9},
  {name => 'tom',  age => 14},
  {name => 'alice',age => 11}
];
</pre>

<h4>age列の最小値を求めるサンプルプログラム</h4>
参照するデータが複雑になったためデータアクセスも少し難しくなりましたが、
チェックする方法は先ほどと同じです。

<pre>
use strict;
use warnings;

my $array_ref = [
  {name => 'bob', age => 9},
  {name => 'tom', age => 14},
  {name => 'alice',age => 11}
];

my $min = 99;

for my $info (@{$array_ref}) {
  if ($min > $info->{'age'}) {
    $min = $info->{'age'};
  }
}

print "$min\n";
</pre>

実行結果
<pre>
9
</pre>

リファレンスを扱った以外は先ほどと同じ処理になります。

このプログラムは、コピー＆ペーストして、<a href="https://perlbanjo.com">PerlBanjo</a>で、すぐに試すことができます。
